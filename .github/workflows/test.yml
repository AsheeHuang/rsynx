name: Test Suite

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    name: Test Suite
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust: [stable, beta, nightly]
        
    steps:
    - uses: actions/checkout@v3
    
    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: ${{ matrix.rust }}
        override: true
        components: rustfmt, clippy
    
    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
    
    - name: Install bats
      run: |
        sudo apt-get update
        sudo apt-get install -y bats
    
    - name: Install netcat (for network tests)
      run: sudo apt-get install -y netcat-traditional
    
    - name: Run lint
      run: |
        cargo fmt --all -- --check
        cargo clippy --all-targets --all-features
    
    - name: Run unit tests
      run: cargo test --lib --verbose
    
    - name: Run integration tests
      run: cargo test --test '*' --verbose
    
    - name: Run bats tests
      run: ./run_tests.sh --bats-only --verbose
    
    - name: Run all tests with coverage
      if: matrix.rust == 'stable'
      run: |
        cargo install cargo-tarpaulin
        ./run_tests.sh --coverage --verbose
    
    - name: Upload coverage to Codecov
      if: matrix.rust == 'stable'
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage/cobertura.xml
        fail_ci_if_error: true

  performance:
    name: Performance Tests
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true
    
    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
    
    - name: Build release
      run: cargo build --release
    
    - name: Run performance benchmarks
      run: |
        # Create test files of different sizes
        mkdir -p perf_test
        dd if=/dev/zero of=perf_test/small.dat bs=1K count=1
        dd if=/dev/zero of=perf_test/medium.dat bs=1M count=1
        dd if=/dev/zero of=perf_test/large.dat bs=1M count=10
        
        # Run performance tests
        echo "Small file sync:"
        time ./target/release/rsynx perf_test/small.dat perf_test/small_copy.dat
        
        echo "Medium file sync:"
        time ./target/release/rsynx perf_test/medium.dat perf_test/medium_copy.dat
        
        echo "Large file sync:"
        time ./target/release/rsynx perf_test/large.dat perf_test/large_copy.dat

  security:
    name: Security Audit
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true
    
    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
    
    - name: Security audit
      run: |
        cargo install cargo-audit
        cargo audit
    
    - name: Check for unsafe code
      run: |
        cargo install cargo-geiger
        cargo geiger --format json --output-file geiger-report.json
        
    - name: Upload security report
      uses: actions/upload-artifact@v4
      with:
        name: security-report
        path: geiger-report.json